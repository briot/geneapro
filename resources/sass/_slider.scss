@import "variables";
/**
 * Set $label-height to non-0 to display the label at the top
 */
@mixin ui-slider-generic($barheight:2px, $handleheight:9px, $color:#333,
                         $label-height:0) {

   $slider-color: #ddd;
   $value-width: 20px;   // leave space to display the value
   $left: 0;             // x-position of the tracks
   $height: 1.5em;       // overall height of the slider
   $top: 0;              // y-position of the tracks

   @if $label-height > 0 {
      $top: 1em;
      $height: 2.5em;
   }

   height: $height;
   min-width: 60px + $value-width;

   position: relative;  // for position of the value
   .ui-slider-label {
      position: absolute;
   }
   .ui-slider-tracks {
      cursor: pointer;
      display: inline-block;
      width: calc(100% - #{$value-width});  // left space for the value
      position: relative;  //  for positioning of the handle
      top: $top;
      height: $barheight;
   }
   .horizontal {
      border-radius: $barheight;
      background: $slider-color;
      height: 100%;
      right: 0;
      left: $left;
      position: absolute;
      width: 100%;
   }
   .ui-slider-fill {
      background: $color;
   }
   .ui-slider-handle {
      outline:none;
      z-index: 2;
      top: $barheight/2;

      // We have to nest a span, so that its center is aligned on the position for a.
      // That way, at 0% the <a> is position on the left of the slider, but the span
      // extends slightly further into the left margin.
      span.round {
         background-color: $color;
         border: 1px solid $color;
         border-radius: 100%;
         position: absolute;
         left: -$handleheight/2;
         top: -$handleheight/2;
         height: $handleheight;
         width: $handleheight;
      }
      &.active {
         span.round {
            border-color: rgba(220,220,220,1.0);
            border-width: 4px;
               width: $handleheight * 2;
               height: $handleheight * 2;
               left: -$handleheight;
               top: -$handleheight;
         }
      }
   }
   .ui-slider-value {
      font-size: 0.8em;
      width: $value-width;
      display: inline-block;
      border-bottom: 1px dashed $slider-color;
      margin: 0;
      padding: 0;
      text-align: center;
      position: absolute;
      right: 0;
      top: $top;
   }
}

@mixin ui-slider-left($label-width:50px) {
   .ui-slider {
      left: $label-width !important;
      margin-right: $label-width - 10px;
   }
   .ui-slider-label {
      width: $label-width;
      left: -$label-width;
   }
}

.ui-slider-40 {
   @include ui-slider-left(40px);
}
.ui-slider-60 {
   @include ui-slider-left(60px);
}
.ui-slider {
   @include ui-slider-generic
}

