# for Emacs: -*- mode: org; mode: flyspell; fill-column: 79 -*-

* Database
** Create indexes in database:
   Assertion.subject1
   Assertion.subject2
   (Assertion.subject1, Assertion.value)   ???
   (Assertion.subject2, Assertion.value)   ???
   Assertion.Value should point into a table rather than be a text
** Investigate storing trees more efficiently
   See for instance http://articles.sitepoint.com/print/hierarchical-data-database
   and http://code.google.com/p/django-mptt/

* Trees
** Look at H-Trees for efficient visualization
  http://www.tco.utah.edu/NEWSLETTER/2011June/featured-article.php
  http://rootstech.org/schedule/saturday/TD044

* Gedcom import
** Import all missing GEDCOM information (reported by ./manage.py import)
** TODO share NOTE, PLAC and SOUR in the database
   At least when they are shared in Gedcom, and if possible more
** some INDI end up with a non-empty description, which is a xref to a NOTE.
   We should create a proper note instead (but not clear how this is done in
   GENTECH)
** Option to capitalize last names, instead of preserving capitals from some
   gedcoms.
** See invalid tags list
http://www.beholdgenealogy.com/blog/?p=876
** In GenTech, occupation is a characteristic, not an event (since it doesn't
   involve other persons or roles).
** Testing
   http://timforsythe.com/blog/gedcom-import-testing-introduction/
   http://heiner-eichmann.de/gedcom/gedcom.htm

* Pedigree View
** Dnd on Pedigree icon should display the pedigree for that person
** When showing children, show the name of the matching spouse
** Support for multiple parents (foster parents, ambiguities,...)
** Make pedigree configurable:
   Chose which events to show in each boxes ("birth" and "death" by default,
   but should fallback on "baptism" and "burial" for instance, or the user
   might want to see other info (if "residence", there can be multiple of
   them) See also engagement instead of marriage
** Tooltip to display person info
** Compact layout should compute width of boxes in one generation by looking
   at the maximum width to display the info.
** Test infinite loops with invalid pedigree: A parent of B parent of C parent of A
** descendants: should show a node for the wife(s), and link children to that.
** Display timeline (ie range of date at the top of each column of boxes)
** Save configuration of pedigree and fanchart in local storage, and restore it the
   next time it is displayed. This configuration can also be used to detect whether
   we need to recompute the layout. This will also allow reloading the whole page
   when selecting a new decujus, which will preserve Back and Forward arrows.

** Dynamic "infinite" expansion
See "Interactive Visualization of Genealogical Graphs"
http://www.youtube.com/watch?v=fZ1GXZ0hJPY
* Highlight rules
** Store them in the database
** Create them graphically
** Use presets

* Quilts
** Easy navigation to parents and children (GeneaQuilts uses pie charts)
** Add a way to unselect
   Currently, clicking on a selected person does nothing, and the only way
   to undo a selection is to select something else.
** Autoscale
** Link to the highlight_rules.py colors
** Clicking on a person should show his/her details
** Geneaquilts has a timeline view
** Geneaquilts automatically zooms in or out when navigating from the
   overview canvas, to show the whole generation. Not sure whether this is
   convenient.
** Implement other layout optimizations from the graphviz paper
   Use local information to compute cut values, and refresh tree traversal
   info locally rather than recompute it from scratch every time. Also only
   recompute cut values for a subset of the nodes, as explained in the paper.
** Trellis Charts
  http://progenygenealogy.com/products/family-tree-charts/trellis.aspx

* Print
** Should hide unwanted parts of the page when printing

* FanChart
** Possibility to fold part of the fanchart to concentrate on specific
   families
   See www.cs.utah.edu/~draperg/research/fanchart/demo/
** Display SOSA number related to a given person
   Not necessarily related to the current root
** Display last name on a separate line to make it more readable
** Tooltip to display person info
** Rotation fan chart
   See https://plus.google.com/u/0/115195430424417504730/posts/QrXM4z9JxrG
** Half and Quarter circle view
   http://www.gramps-project.org/wiki/index.php?title=GEPS_030:_New_Visualization_Techniques
** Display rotated text (on a path)
   when HTML5 canvas supports it (it is now part of the standard, but not implemented
   by browsers yet)

* Person View
** Add a rounded box showing the color from highlight_rules.py

* Person list view
** Slow to display with big databases
   If we paginate based on first letter of last name and only query those,
   it might be made much faster, and also easier to navigate.

* Sources
** Use Bibtex as a reference for which fields are needed for the various
   formats of sources.
** Each format provides a template for the full, secondary and short citations,
   for instance "${author},${italic-title}". This template is parsed to find
   out which fields should be displayed in the form.
   We want to cache the full citations as part of the source table for quick
   lookup, but in practice the master are the various fields, since depending
   on the citation style the fields can be used differently to come up with the
   citation (see the various styles for bibtex, at
   http://www.tex.ac.uk/tex-archive/biblio/bibtex)
** See
   http://www.gramps-project.org/wiki/index.php?title=GEPS_018:_Evidence_style_sources
   http://jytangledweb.org/genealogy/evidencestyle/
** Surety schemes
   http://www.youtube.com/watch?v=l6PRflCvBCo
** Citations
*** http://www.progenealogists.com/citationguide.htm

* Groups
** For: neighbor, friend, clergy, care-taker, and more

* Graphically editing the surety scheme
** DONE This scheme is properly taken into account when displaying assertions
   in the person view, but currently the user cannot edit it.
** Take these custom schemes into account when importing gedcom files

* Ideas for names
** Geneatica, Forebears, Testimony, Testimology
** GeneaProve

* Packaging
** Use py2exe and py2app to provide standalone executables
** Compile with Closure compiler for efficiency
** Compile CSS for efficiency
** Add a way to precompute (into a .js file) all the tree data for
   a given person, so that we can have a demo of the program running
   on github

* Design
** Should we be using groups to store families ?
  Currently, a child belongs to a family through his birth (that gives his
  parents).
  But we have to create dummy personas sometimes to preserve the information on
  siblings (when none or only one of the parents is known).
  We could instead create a group "Family" in which personas are added as
  "child" or "father" or "mother".
  Main drawback is in the GUI, since we don't want users to have to create
  such a family every time. Perhaps when entering a birth event GeneaProve could
  transparently create the group. Likewise, have dummy persona-to-persona
  relationships like "sibling", which are saved in the group rather than as
  assertions in P2P.

* Face detection in images
  See https://github.com/jaysalvat/jquery.facedetection

* Online courses
** Inferential Genealogy
  https://www.familysearch.org/learningcenter/lesson/inferential-genealogy/251

* Gedcom replacements
  Several models are proposed to replace Gedcom. Most of them share a number of
  characteristics with the GenTech datamodel that GeneaProve uses, but with
  slight differences. It would be useful to be able to export to one of those,
  and perhaps to even change the internal datamodel if a clear contender
  emerges.
** http://gedcomx.net
** http://gedcomx.org
** http://github.com/FamilySearch/gedcomx
** http://www.tamurajones.net/FamilySearchReleasesGEDCOMX.xhtml

* web
** timeline
  http://www.chronozoomproject.org/
** What are conclusions ?
   http://michaelhait.wordpress.com/2012/02/26/simple-and-complex/
** Evidence-based genealogy
   http://timforsythe.com/blog/evidence-based-genealogy-vs-conclusion-based-genealogy/
   http://www.geneamusings.com/2012/02/more-on-conclusion-based-and-evidence.html
   http://www.youtube.com/watch?v=7mlSV1E6saA
   
