# for Emacs: -*- mode: org; mode: flyspell; fill-column: 79 -*-

* Database
** Create indexes in database:
   Assertion.subject1
   Assertion.subject2
   (Assertion.subject1, Assertion.value)   ???
   (Assertion.subject2, Assertion.value)   ???
   Assertion.Value should point into a table rather than be a text
** Investigate storing trees more efficiently
   See for instance http://articles.sitepoint.com/print/hierarchical-data-database
   and http://code.google.com/p/django-mptt/

* Gedcom import
** Import all missing GEDCOM information (reported by ./manage.py import)
** share NOTE, PLAC and SOUR in the database
   At least when they are shared in Gedcom, and if possible more
** some INDI end up with a non-empty description, which is a xref to a NOTE.
   We should create a proper note instead (but not clear how this is done in
   GENTECH)

* Pedigree View
** Dnd on Pedigree icon should display the pedigree for that person
** Should cache pedigree data locally to avoid reloading when going back
   (perhaps only save a few generations, although this is not big)
** When showing children, show the name of the matching spouse
** Support for multiple parents (foster parents, ambiguities,...)
** Make pedigree configurable:
   Chose which events to show in each boxes ("birth" and "death" by default,
   but should fallback on "baptism" and "burial" for instance, or the user
   might want to see other info (if "residence", there can be multiple of
   them) See also engagement instead of marriage
** Tooltip to display person info
** Zoom and scroll with 10 generations, then go back to 3 generations.
   The layout is not re-centered.
** Improve layout. Current layout requires a lot of vertical space compared
   to horizontal space, when displaying lots of generations.
** Display more information for each person, in particular when zooming
** Highlight box when hover.
   Display action buttons ("make decujus", "view info",...) for the active box.
   Use a R-Tree for fast detection.

* Highlight rules
** Store them in the database
** Create them graphically
** Use presets

* Print
** Should hide unwanted parts of the page when printing

* FanChart
** Possibility to fold part of the fanchart to concentrate on specific
   families
   See www.cs.utah.edu/~draperg/research/fanchart/demo/
** Display SOSA number related to a given person
   Not necessarily related to the current root
** Display last name on a separate line to make it more readable
** Editing fanchart's config graphically
   As opposed to modifying defaultConfig in fanchart.js
** Tooltip to display person info
** Implement based on the canvas.

* Person View
** For each event, add an "downarrow" to show event details
   In particular, all personas that took part in the event.

* Styles

* Groups
** For: neighbor, friend, clergy, care-taker, and more

* Ideas for names
** Geneatica, Forebears, Testimony
